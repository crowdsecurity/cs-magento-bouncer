<?php declare(strict_types=1);
/**
 * CrowdSec_Bouncer Extension
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the MIT LICENSE
 * that is bundled with this package in the file LICENSE
 *
 * @category   CrowdSec
 * @package    CrowdSec_Bouncer
 * @copyright  Copyright (c)  2021+ CrowdSec
 * @author     CrowdSec team
 * @see        https://crowdsec.net CrowdSec Official Website
 * @license    MIT LICENSE
 *
 */

/**
 *
 * @category CrowdSec
 * @package  CrowdSec_Bouncer
 * @module   Bouncer
 * @author   CrowdSec team
 *
 */

/**
 * phpcs:disable PSR1.Files.SideEffects
 * phpcs:disable Magento2.Security.IncludeFile
 * phpcs:disable Magento2.Security.Superglobal.SuperglobalUsageWarning
 * phpcs:disable Magento2.Functions.DiscouragedFunction
 */

use CrowdSec\Bouncer\Helper\Data;
use CrowdSec\Bouncer\Model\Bouncer;
use CrowdSec\Bouncer\Model\Session;
use CrowdSec\Bouncer\Exception\CrowdSecException;
use CrowdSec\Bouncer\Registry\CurrentBouncer;
use Magento\Framework\App\AreaList;
use Magento\Framework\App\Bootstrap;
use Magento\Framework\App\Request\Http as Request;
use Magento\Framework\App\Response\Http as Response;
use Magento\Framework\App\State;
use Magento\Framework\ObjectManager\ConfigLoaderInterface;

if (PHP_SAPI === 'cli') {
    return;
}
// THIS FILE MUST BE COPIED IN "app/etc" FOLDER and renamed "crowdsec-prepend.php"
// phpcs:ignore Magento2.Security.IncludeFile.FoundIncludeFile
require_once dirname(__DIR__)."/autoload.php";

if (!defined('CROWDSEC_PREPEND_RUNNING_CONTEXT')) {
    define('CROWDSEC_PREPEND_RUNNING_CONTEXT', true);
}

$bootstrap = Bootstrap::create(BP, $_SERVER);
// We need ObjectManager, area and di configurations
$objectManager = $bootstrap->getObjectManager();
$areaList = $objectManager->get(AreaList::class);
$request = $objectManager->get(Request::class);
$state = $objectManager->get(State::class);
$configLoader = $objectManager->get(ConfigLoaderInterface::class);
$helper = $objectManager->get(Data::class);
try {
    /**
    * If there is any technical problem while bouncing, don't block the user.
    * Bypass bouncing and log the error.
    */
    $areaCode = $areaList->getCodeByFrontName($request->getFrontName());
    $state->setAreaCode($areaCode);
    $objectManager->configure($configLoader->load($areaCode));
    // Check if feature is enabled
    if (!$helper->isEnabled($state->getAreaCode())) {
        return;
    }
    $bouncerRegistry = $objectManager->get(CurrentBouncer::class);
    // Avoid multiple call
    if ($bouncerRegistry->get()) {
        return;
    }
    // Handle session start
    $session = $objectManager->get(Session::class);
    /** @var Bouncer $bouncer */
    $bouncer = $bouncerRegistry->create();
    $configs = $helper->getBouncerConfigs();
    $bouncer->init($configs);
    $bouncer->run();
    // If ban or captcha remediation wall display is detected
    if ($bouncer->getRemediationDisplay()) {
        $response = $objectManager->get(Response::class);
        $response->sendResponse();
        // phpcs:ignore Magento2.Security.LanguageConstruct.ExitUsage
        exit(0);
    }
} catch (CrowdSecException $e) {
    $helper->critical('', [
        'type' => 'M2_EXCEPTION_WHILE_PREPEND_BOUNCING',
        'message' => $e->getMessage(),
        'code' => $e->getCode(),
        'file' => $e->getFile(),
        'line' => $e->getLine(),
    ]);

    if ($helper->canDisplayErrors()) {
        throw $e;
    }
}
