<?php
/**
 * CrowdSec_Bouncer Extension
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the MIT LICENSE
 * that is bundled with this package in the file LICENSE
 *
 * @category   CrowdSec
 * @package    CrowdSec_Bouncer
 * @copyright  Copyright (c)  2021+ CrowdSec
 * @author     CrowdSec team
 * @see        https://crowdsec.net CrowdSec Official Website
 * @license    MIT LICENSE
 *
 */

/**
 *
 * @category CrowdSec
 * @package  CrowdSec_Bouncer
 * @module   Bouncer
 * @author   CrowdSec team
 *
 */

/** @var \CrowdSec\Bouncer\Block\Adminhtml\System\Config\Geolocation\Country $block */
/** @var \Magento\Framework\View\Helper\SecureHtmlRenderer $secureRenderer */
/**  @var \Magento\Framework\Escaper $escaper */
?>

<?php

$ajaxUrl = $escaper->escapeJs($block->getAjaxUrl());
$errorMessage = $escaper->escapeJs($escaper->escapeHtml(__('Error during CrowdSec geolocation test.')));
$geolocationTypeField = $escaper->escapeJs($block->getGeolocationTypeField());
$geolocationMaxmindDatabaseTypeField = $escaper->escapeJs($block->getGeolocationMaxmindDatabaseTypeField());
$geolocationMaxmindDatabasePathField = $escaper->escapeJs($block->getGeolocationMaxmindDatabasePathField());
$forcedTestIpField = $escaper->escapeJs($block->getForcedTestIpField());
$saveResultField = $escaper->escapeJs($block->getSaveResultField());


 $scriptString = <<<script
require(['prototype'], function(){

//<![CDATA[
    function testGeolocation() {
        var testGeolocationMessage = $('geolocation_test_result');

        params = {
            geolocation_type: $('{$geolocationTypeField}').value,
            geolocation_maxmind_database_type: $('{$geolocationMaxmindDatabaseTypeField}').value,
            geolocation_maxmind_database_path: $('{$geolocationMaxmindDatabasePathField}').value,
            forced_test_ip: $('{$forcedTestIpField}').value,
            save_result: $('{$saveResultField}').value,
        };

        new Ajax.Request('{$ajaxUrl}', {
            parameters: params,
            onSuccess: function(response) {
                var result = '{$errorMessage}';
                try {
                    if (response.responseText.isJSON()) {
                        response = response.responseText.evalJSON();
                        result = response.message;
                    }
                    if (response.test == 1) {
                        testGeolocationMessage.removeClassName('hidden')
                                .removeClassName('error').addClassName('success');
                    } else {
                        testGeolocationMessage.removeClassName('hidden').removeClassName('success')
                                .addClassName('error');
                    }
                } catch (e) {
                    testGeolocationMessage.removeClassName('hidden').removeClassName('success')
                            .addClassName('error');
                }
                testGeolocationMessage.update(result);
            }
        });
    }

    window.testGeolocation = testGeolocation;
//]]>

});
script;
?>
<?= /* @noEscape */ $secureRenderer->renderTag('script', [], $scriptString, false); ?>

<div class="actions actions-test-geolocation actions-crowdsec">
    <button class="action-test-geolocation" type="button" id="<?= /* @noEscape */ $block->getHtmlId() ?>">
        <span><?= $escaper->escapeHtml($block->getButtonLabel()) ?></span>
    </button>
    <p class="hidden" id="geolocation_test_result"></p>
</div>
<?=
/* @noEscape */ $secureRenderer->renderTag('style', [], '#geolocation_test_result {margin-bottom: 10px;}', false);
?>
<?= /* @noEscape */ $secureRenderer->renderEventListenerAsTag(
    'onclick',
    'testGeolocation();event.preventDefault();',
    '#' . /* @noEscape */ $block->getHtmlId()
); ?>
