<?php
/**
 * CrowdSec_Bouncer Extension
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the MIT LICENSE
 * that is bundled with this package in the file LICENSE
 *
 * @category   CrowdSec
 * @package    CrowdSec_Bouncer
 * @copyright  Copyright (c)  2021+ CrowdSec
 * @author     CrowdSec team
 * @see        https://crowdsec.net CrowdSec Official Website
 * @license    MIT LICENSE
 *
 */

/**
 *
 * @category CrowdSec
 * @package  CrowdSec_Bouncer
 * @module   Bouncer
 * @author   CrowdSec team
 *
 */
?>

<?php
/** @var \CrowdSec\Bouncer\Block\Adminhtml\System\Config\Connection\Ping $block */
/** @var \Magento\Framework\Escaper $escaper */
?>
<script>
    require(['prototype'], function(){

//<![CDATA[
        function pingConnection() {
            var pingConnectionMessage = $('lapi_ping_result');

            params = {
                api_url: $('<?= $escaper->escapeJs($block->getUrlField()) ?>').value,
                bouncer_key: $('<?= $escaper->escapeJs($block->getKeyField()) ?>').value,
                auth_type: $('<?= $escaper->escapeJs($block->getAuthTypeField()) ?>').value,
                tls_cert_path: $('<?= $escaper->escapeJs($block->getTlsCertPathField()) ?>').value,
                tls_key_path: $('<?= $escaper->escapeJs($block->getTlsKeyPathField()) ?>').value,
                tls_verify_peer: $('<?= $escaper->escapeJs($block->getTlsVerifyPeerField()) ?>').value,
                tls_ca_cert_path: $('<?= $escaper->escapeJs($block->getTlsCaCertPathField()) ?>').value,
                use_curl: $('<?= $escaper->escapeJs($block->getUseCurlField()) ?>').value,
                api_connect: $('<?= $escaper->escapeJs($block->getApiTimeoutField()) ?>').value,
                api_connect_timeout: $('<?= $escaper->escapeJs($block->getApiConnectTimeoutField()) ?>').value
            };

            new Ajax.Request('<?= $escaper->escapeJs($escaper->escapeUrl($block->getAjaxUrl())) ?>', {
                parameters: params,
                onSuccess: function(response) {
                    var result =
                        '<?= $escaper->escapeJs($escaper->escapeHtml(__('Error during CrowdSec Connection ping.'))) ?>';
                    try {
                        if (response.responseText.isJSON()) {
                            response = response.responseText.evalJSON();
                            result = response.message;
                        }
                        if (response.connection == 1) {
                            pingConnectionMessage.removeClassName('hidden')
                                .removeClassName('error').addClassName('success');
                        } else {
                            pingConnectionMessage.removeClassName('hidden').removeClassName('success')
                                .addClassName('error');
                        }
                    } catch (e) {
                        pingConnectionMessage.removeClassName('hidden').removeClassName('success')
                            .addClassName('error');
                    }
                    pingConnectionMessage.update(result);
                }
            });
        }

        window.pingConnection = pingConnection;
//]]>

    });
</script>

<div class="actions actions-ping-connection actions-crowdsec">
    <button onclick="javascript:pingConnection(); return false;" class="action-ping-connection" type="button" id="<?=
    $escaper->escapeHtmlAttr($block->getHtmlId()) ?>">
        <span><?= $escaper->escapeHtml($block->getButtonLabel()) ?></span>
    </button>
    <p class="hidden" id="lapi_ping_result"></p>
</div>
